<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>giovanni-getMDlink</string>
	<key>connections</key>
	<dict>
		<key>337C03A5-3834-4778-9AAA-6918F7A1C484</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>76E998DE-B088-42D1-98C8-D788A157AB6B</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>43029F1C-32B5-4361-885E-C88E8999D4D4</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>E4E134FA-60F1-4D0E-BF06-6D3CC579861F</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>76E998DE-B088-42D1-98C8-D788A157AB6B</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>43029F1C-32B5-4361-885E-C88E8999D4D4</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>AEE940FC-3714-44C1-8DBE-29040C8FE252</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>E7D31C38-EFCD-4360-A2E3-8802117E8C87</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>E4E134FA-60F1-4D0E-BF06-6D3CC579861F</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>F6CB0339-C729-4131-87CE-50646BC0E719</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>F6CB0339-C729-4131-87CE-50646BC0E719</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>AEE940FC-3714-44C1-8DBE-29040C8FE252</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>giovanni</string>
	<key>description</key>
	<string>get a file's markdown link to include in Obsidian</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>get markdown link</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string># THESE VARIABLES MUST BE SET. SEE THE ONEUPDATER README FOR AN EXPLANATION OF EACH.
readonly remote_info_plist='https://raw.githubusercontent.com/giovannicoppola/get-markdown-link/main/info.plist'
readonly workflow_url='https://github.com/giovannicoppola/get-markdown-link'
readonly download_type='github_release'
readonly frequency_check='15'

# FROM HERE ON, CODE SHOULD BE LEFT UNTOUCHED!
function abort {
  echo "${1}" &gt;&amp;2
  exit 1
}

function url_exists {
  curl --silent --location --output /dev/null --fail --range 0-0 "${1}"
}

function notification {
  local -r notificator="$(find . -type f -name 'notificator')"

  if [[ -f "${notificator}" &amp;&amp; "$(/usr/bin/file --brief --mime-type "${notificator}")" == 'text/x-shellscript' ]]; then
    "${notificator}" --message "${1}" --title "${alfred_workflow_name}" --subtitle 'A new version is available'
    return
  fi

  osascript -e "display notification \"${1}\" with title \"${alfred_workflow_name}\" subtitle \"A new version is available\""
}

# Local sanity checks
readonly local_info_plist='info.plist'
readonly local_version="$(/usr/libexec/PlistBuddy -c 'print version' "${local_info_plist}")"

[[ -n "${local_version}" ]] || abort 'You need to set a workflow version in the configuration sheet.'
[[ "${download_type}" =~ ^(direct|page|github_release)$ ]] || abort "'download_type' (${download_type}) needs to be one of 'direct', 'page', or 'github_release'."
[[ "${frequency_check}" =~ ^[0-9]+$ ]] || abort "'frequency_check' (${frequency_check}) needs to be a number."

# Check for updates
if [[ $(find "${local_info_plist}" -mtime +"${frequency_check}"d) ]]; then
  # Remote sanity check
  if ! url_exists "${remote_info_plist}"; then
    abort "'remote_info_plist' (${remote_info_plist}) appears to not be reachable."
  fi

  readonly tmp_file="$(mktemp)"
  curl --silent --location --output "${tmp_file}" "${remote_info_plist}"
  readonly remote_version="$(/usr/libexec/PlistBuddy -c 'print version' "${tmp_file}")"
  rm "${tmp_file}"

  if [[ "${local_version}" == "${remote_version}" ]]; then
    touch "${local_info_plist}" # Reset timer by touching local file
    exit 0
  fi

  if [[ "${download_type}" == 'page' ]]; then
    notification 'Opening download page…'
    open "${workflow_url}"
    exit 0
  fi

  readonly download_url="$(
    if [[ "${download_type}" == 'github_release' ]]; then
      osascript -l JavaScript -e 'function run(argv) { return JSON.parse(argv[0])["assets"].find(asset =&gt; asset["browser_download_url"].endsWith(".alfredworkflow"))["browser_download_url"] }' "$(curl --silent "https://api.github.com/repos/${workflow_url}/releases/latest")"
    else
      echo "${workflow_url}"
    fi
  )"

  if url_exists "${download_url}"; then
    notification 'Downloading and installing…'
    readonly download_name="$(basename "${download_url}")"
    curl --silent --location --output "${HOME}/Downloads/${download_name}" "${download_url}"
    open "${HOME}/Downloads/${download_name}"
  else
    abort "'workflow_url' (${download_url}) appears to not be reachable."
  fi
fi</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>E7D31C38-EFCD-4360-A2E3-8802117E8C87</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>autopaste</key>
				<true/>
				<key>clipboardtext</key>
				<string>{query}</string>
				<key>ignoredynamicplaceholders</key>
				<false/>
				<key>transient</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.clipboard</string>
			<key>uid</key>
			<string>AEE940FC-3714-44C1-8DBE-29040C8FE252</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>subtext</key>
				<string></string>
				<key>text</key>
				<string>enter the link-associated text</string>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>43029F1C-32B5-4361-885E-C88E8999D4D4</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>acceptsmulti</key>
				<integer>1</integer>
				<key>filetypes</key>
				<array/>
				<key>name</key>
				<string>get markdown link</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.action</string>
			<key>uid</key>
			<string>337C03A5-3834-4778-9AAA-6918F7A1C484</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>68</integer>
				<key>script</key>
				<string>// convert POSIX path (e.g. /path/to/file) to a Markdown URL
//script from @deanishe

function markdownUrl(path, myText) {
  // encode path for use in a URL
  let url = 'file://' + encodeURI(path)
  // also encode parentheses to ensure a valid Markdown URL
  url = url.replace('(', '%28').replace(')', '%29')
  // return Markdown-formatted URL
  return `[${myText}](${url})`
}

function run(argv) {
ObjC.import('stdlib');
var myFile = $.getenv('myFilePath');
  // first command-line argument is the filepath
  return markdownUrl(myFile, argv[0])
}</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>7</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>E4E134FA-60F1-4D0E-BF06-6D3CC579861F</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>matchmode</key>
				<integer>1</integer>
				<key>matchstring</key>
				<string>\n</string>
				<key>regexcaseinsensitive</key>
				<false/>
				<key>regexmultiline</key>
				<false/>
				<key>replacestring</key>
				<string></string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.replace</string>
			<key>uid</key>
			<string>F6CB0339-C729-4131-87CE-50646BC0E719</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string></string>
				<key>passthroughargument</key>
				<false/>
				<key>variables</key>
				<dict>
					<key>myFilePath</key>
					<string>{query}</string>
				</dict>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.argument</string>
			<key>uid</key>
			<string>76E998DE-B088-42D1-98C8-D788A157AB6B</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>readme</key>
	<string></string>
	<key>uidata</key>
	<dict>
		<key>337C03A5-3834-4778-9AAA-6918F7A1C484</key>
		<dict>
			<key>colorindex</key>
			<integer>1</integer>
			<key>xpos</key>
			<integer>50</integer>
			<key>ypos</key>
			<integer>245</integer>
		</dict>
		<key>43029F1C-32B5-4361-885E-C88E8999D4D4</key>
		<dict>
			<key>xpos</key>
			<integer>345</integer>
			<key>ypos</key>
			<integer>245</integer>
		</dict>
		<key>76E998DE-B088-42D1-98C8-D788A157AB6B</key>
		<dict>
			<key>xpos</key>
			<integer>240</integer>
			<key>ypos</key>
			<integer>275</integer>
		</dict>
		<key>AEE940FC-3714-44C1-8DBE-29040C8FE252</key>
		<dict>
			<key>xpos</key>
			<integer>845</integer>
			<key>ypos</key>
			<integer>240</integer>
		</dict>
		<key>E4E134FA-60F1-4D0E-BF06-6D3CC579861F</key>
		<dict>
			<key>xpos</key>
			<integer>515</integer>
			<key>ypos</key>
			<integer>245</integer>
		</dict>
		<key>E7D31C38-EFCD-4360-A2E3-8802117E8C87</key>
		<dict>
			<key>colorindex</key>
			<integer>12</integer>
			<key>note</key>
			<string>OneUpdater</string>
			<key>xpos</key>
			<integer>1035</integer>
			<key>ypos</key>
			<integer>240</integer>
		</dict>
		<key>F6CB0339-C729-4131-87CE-50646BC0E719</key>
		<dict>
			<key>note</key>
			<string>replace newline with one space</string>
			<key>xpos</key>
			<integer>725</integer>
			<key>ypos</key>
			<integer>270</integer>
		</dict>
	</dict>
	<key>variablesdontexport</key>
	<array/>
	<key>version</key>
	<string>0.1</string>
	<key>webaddress</key>
	<string>https://github.com/giovannicoppola/get-markdown-link</string>
</dict>
</plist>
